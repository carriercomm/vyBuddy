#!/bin/bash
#
# vyBuddy vymaster daemon control
#
source /etc/profile.d/rvm.sh
source /etc/profile.d/vybuddy.sh

# These lines will be removed after vyBuddy support script ecosystem update ########################
DATABASE_YML="${VYBUDDY_RAILS_CAP_CONFIG_DIR}/database.yml"
SQL_HOST="$(grep host: "${DATABASE_YML}" | awk '{print $NF}')"
SQL_USER="$(grep username: "${DATABASE_YML}" | awk '{print $NF}')"
SQL_PASS="$(grep password: "${DATABASE_YML}" | awk '{print $NF}')"
SQL_DB="$(grep database: "${DATABASE_YML}" | awk '{print $NF}')"
SQL_OPTS="-h${SQL_HOST} -u${SQL_USER} -p${SQL_PASS} ${SQL_DB}"
SQL_EXEC="/usr/bin/mysql ${SQL_OPTS}"
SQL_BCKP="/usr/bin/mysqldump ${SQL_OPTS}"

CACHE_DIR="${VYBUDDY_ROOT}/cache"
CACHE_SQL_BCKP_DIR="${CACHE_DIR}/sql-backups"
####################################################################################################

SQL_BCKP_FILE="${CACHE_SQL_BCKP_DIR}/$(date +%Y%m%d%H%M%S)-${RANDOM}-vybuddyctl.sql.gz"

function start_daemon() {
  if [ -f "${VYBUDDY_DAEMON_PID_FILE}" ]; then
    echo "Not starting ${VYBUDDY_DAEMON} (PID file already exists: ${VYBUDDY_DAEMON_PID_FILE})"
  else
    nice -n ${VYBUDDY_DAEMON_NICE} ${VYBUDDY_DAEMON_COMMAND} >"${VYBUDDY_DAEMON_STDOUT}" 2>"${VYBUDDY_DAEMON_STDERR}" &
    echo "${!}" > "${VYBUDDY_DAEMON_PID_FILE}"
  fi
  touch "${VYBUDDY_DAEMON_STATE_FILE}"
  sleep 2
}

function stop_daemon() {
  rm -f "${VYBUDDY_DAEMON_STATE_FILE}"
  if [ ! -f "${VYBUDDY_DAEMON_PID_FILE}" ]; then
    echo "Not stopping ${VYBUDDY_DAEMON} (no PID file)"
  else
    VYBUDDY_DAEMON_PID=$(cat ${VYBUDDY_DAEMON_PID_FILE})
    kill "${VYBUDDY_DAEMON_PID}"
    rm "${VYBUDDY_DAEMON_PID_FILE}"
  fi
}

function restart_daemon() {
  stop_daemon
  sleep 2
  start_daemon
}

function daemon_status() {
  REAL_VYBUDDY_DAEMON_PID=$(pgrep ^${VYBUDDY_DAEMON}.rb$)
  if [ -f "${VYBUDDY_DAEMON_PID_FILE}" ]; then
    VYBUDDY_DAEMON_PID=$(cat ${VYBUDDY_DAEMON_PID_FILE})
    if [ "${VYBUDDY_DAEMON_PID}" == "${REAL_VYBUDDY_DAEMON_PID}" ]; then
      VYBUDDY_DAEMON_STATUS="Running (${VYBUDDY_DAEMON_PID})"
    else
      VYBUDDY_DAEMON_STATUS="Failed!" 
    fi
  else
    if [ ! "${REAL_VYBUDDY_DAEMON_PID}" ]; then
      VYBUDDY_DAEMON_STATUS="Stopped"
    else
      VYBUDDY_DAEMON_STATUS="Walking dead! (${VYBUDDY_DAEMON_PID})"
    fi
  fi
  echo "vyMasterD status: ${VYBUDDY_DAEMON_STATUS}"
}

function rails_console() {
  rails console
}

function sql_console() {
  ${SQL_EXEC}
}

function export_database() {
  ${SQL_BCKP}
}

function import_database() {
  if [ ! -t 0 ]; then
    echo "Saving database backup: ${SQL_BCKP_FILE}"
    export_database | gzip > "${SQL_BCKP_FILE}"
    ${SQL_EXEC}
  else
    echo "No data can be read from STDIN!"
    exit 1
  fi
}

function list_scripts() {
  cd "${VYBUDDY_SCRIPTS_DIR}"
  ls -1 *.rb | sed 's/\.rb$//'
}

function run_script() {
  SCRIPT_COMMAND="./${VYBUDDY_SCRIPTS_SUBDIR}/${1}.rb"; shift
  SCRIPT_ARGS="${@}"
  ${SCRIPT_COMMAND} ${SCRIPT_ARGS}
}

if [ ${USER} != ${VYBUDDY_USER} ]; then
  echo "Must be launched from user: ${VYBUDDY_USER}"
  exit 1
fi

cd "${VYBUDDY_DIR}"
case ${1} in
  "start")start_daemon;;
  "stop")stop_daemon;;
  "restart")restart_daemon;;
  "status")daemon_status;;
  "rails-console")rails_console;;
  "sql-console")sql_console;;
  "export-database")export_database;;
  "import-database")import_database;;
  "list-scripts")list_scripts;;
  "run-script")shift; run_script ${@};;
  *)echo "Usage: vybuddyctl start|stop|restart|status|rails-console|sql-console|export-database|import-database|list-scripts|run-script <script> [<args>]"; exit 1;;
esac
